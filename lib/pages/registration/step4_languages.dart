import 'package:flutter/material.dart';
import 'registration_data.dart';

class Step4Languages extends StatefulWidget {
  final UserRegistrationData data;
  final VoidCallback onNext;
  final VoidCallback onBack;

  const Step4Languages({
    super.key,
    required this.data,
    required this.onNext,
    required this.onBack,
  });

  @override
  State<Step4Languages> createState() => _Step4LanguagesState();
}

class _Step4LanguagesState extends State<Step4Languages> {
  final List<String> allLanguages = const [
    '–†—É—Å—Å–∫–∏–π',
    '–ü–æ–ª—å—Å–∫–∏–π',
    '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
    '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π',
    '–ù–µ–º–µ—Ü–∫–∏–π',
    '–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∏–π',
    '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π',
    '–ò—Å–ø–∞–Ω—Å–∫–∏–π',
    '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π',
    '–ö–∏—Ç–∞–π—Å–∫–∏–π',
    '–Ø–ø–æ–Ω—Å–∫–∏–π',
    '–ö–æ—Ä–µ–π—Å–∫–∏–π',
    '–ß–µ—à—Å–∫–∏–π',
    '–°–ª–æ–≤–∞—Ü–∫–∏–π',
    '–õ–∏—Ç–æ–≤—Å–∫–∏–π',
    '–õ–∞—Ç—ã—à—Å–∫–∏–π',
    '–≠—Å—Ç–æ–Ω—Å–∫–∏–π',
    '–¢—É—Ä–µ—Ü–∫–∏–π',
    '–ê—Ä–∞–±—Å–∫–∏–π',
    '–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π',
    '–ì—Ä–µ—á–µ—Å–∫–∏–π',
    '–í–µ–Ω–≥–µ—Ä—Å–∫–∏–π',
    '–§–∏–Ω—Å–∫–∏–π',
    '–®–≤–µ–¥—Å–∫–∏–π',
    '–ù–æ—Ä–≤–µ–∂—Å–∫–∏–π',
    '–î–∞—Ç—Å–∫–∏–π',
    '–•–∏–Ω–¥–∏',
    '–ë–µ–Ω–≥–∞–ª—å—Å–∫–∏–π',
    '–¢–∞–π—Å–∫–∏–π',
    '–í—å–µ—Ç–Ω–∞–º—Å–∫–∏–π',
    '–ò–≤—Ä–∏—Ç',
    '–ü–µ—Ä—Å–∏–¥—Å–∫–∏–π',
    '–£–∑–±–µ–∫—Å–∫–∏–π',
    '–¢–∞–¥–∂–∏–∫—Å–∫–∏–π',
    '–ê—Ä–º—è–Ω—Å–∫–∏–π',
    '–ì—Ä—É–∑–∏–Ω—Å–∫–∏–π',
    '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π',
    '–°–µ—Ä–±—Å–∫–∏–π',
    '–•–æ—Ä–≤–∞—Ç—Å–∫–∏–π',
    '–ë–æ–ª–≥–∞—Ä—Å–∫–∏–π',
    '–†—É–º—ã–Ω—Å–∫–∏–π',
    '–ê–ª–±–∞–Ω—Å–∫–∏–π',
    '–ú–∞–∫–µ–¥–æ–Ω—Å–∫–∏–π',
  ];

  late List<String> filteredLanguages;
  late List<String> selected;
  final TextEditingController searchCtrl = TextEditingController();

  @override
  void initState() {
    super.initState();
    // üëá –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏ –∏–∑ RegistrationFlow
    selected = [...widget.data.languages];
    filteredLanguages = List.from(allLanguages);

    searchCtrl.addListener(() {
      final query = searchCtrl.text.toLowerCase();
      setState(() {
        filteredLanguages = allLanguages
            .where((lang) => lang.toLowerCase().contains(query))
            .toList();
      });
    });
  }

  void toggle(String lang) {
    setState(() {
      if (selected.contains(lang)) {
        selected.remove(lang);
      } else {
        selected.add(lang);
      }
      widget.data.languages = selected; // üëà —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ data
    });
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        children: [
          TextField(
            controller: searchCtrl,
            decoration: const InputDecoration(
              hintText: '–ü–æ–∏—Å–∫ —è–∑—ã–∫–∞...',
              prefixIcon: Icon(Icons.search),
            ),
          ),
          const SizedBox(height: 12),
          Expanded(
            child: ListView.builder(
              itemCount: filteredLanguages.length,
              itemBuilder: (context, index) {
                final lang = filteredLanguages[index];
                final isSelected = selected.contains(lang);
                return ListTile(
                  title: Text(lang),
                  trailing: isSelected
                      ? const Icon(Icons.check_circle, color: Colors.blue)
                      : const Icon(Icons.circle_outlined),
                  onTap: () => toggle(lang),
                );
              },
            ),
          ),
          Row(
            children: [
              TextButton(onPressed: widget.onBack, child: const Text('–ù–∞–∑–∞–¥')),
              const Spacer(),
              ElevatedButton(
                onPressed: selected.isEmpty
                    ? null
                    : () {
                  widget.data.languages = selected;
                  widget.onNext();
                },
                child: const Text('–î–∞–ª–µ–µ'),
              ),
            ],
          ),
        ],
      ),
    );
  }
}
